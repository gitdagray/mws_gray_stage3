class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static async fetchRestaurants(t){try{const e=await fetch(DBHelper.DATABASE_URL),a=await e.json();console.log(a),t(null,a)}catch(e){console.error(e);t("Request failed. "+e,null)}}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.find(e=>e.id==t);a?e(null,a):e("Restaurant does not exist",null)}})}static async fetchReviewsByRestaurantId(t,e){try{const a=await fetch("http://localhost:1337/reviews/?restaurant_id="+t),l=await a.json();console.log(l),e(null,l)}catch(t){console.error(t);e("Request failed. "+t,null)}}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.filter(e=>e.cuisine_type==t);e(null,a)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((a,l)=>{if(a)e(a,null);else{const a=l.filter(e=>e.neighborhood==t);e(null,a)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,a){DBHelper.fetchRestaurants((l,s)=>{if(l)a(l,null);else{let l=s;"all"!=t&&(l=l.filter(e=>e.cuisine_type==t)),"all"!=e&&(l=l.filter(t=>t.neighborhood==e)),a(null,l)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].neighborhood),l=e.filter((t,a)=>e.indexOf(t)==a);t(null,l)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,a)=>{if(e)t(e,null);else{const e=a.map((t,e)=>a[e].cuisine_type),l=e.filter((t,a)=>e.indexOf(t)==a);t(null,l)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){let e=t.id;return e="/img/"+e}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}